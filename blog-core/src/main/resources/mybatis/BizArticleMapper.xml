<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ralap.blog.persistent.mapper.BizArticleMapper">
  <resultMap id="BaseResultMap" type="com.ralap.blog.persistent.beans.BizArticle">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="title" property="title" jdbcType="VARCHAR"/>
    <result column="user_id" property="userId" jdbcType="BIGINT"/>
    <result column="cover_url" property="coverUrl" jdbcType="VARCHAR"/>
    <result column="qrcode_url" property="qrcodeUrl" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="BIT"/>
    <result column="type_id" property="typeId" jdbcType="INTEGER"/>
    <result column="top" property="top" jdbcType="BIT"/>
    <result column="recommend" property="recommend" jdbcType="BIT"/>
    <result column="original" property="original" jdbcType="BIT"/>
    <result column="description" property="description" jdbcType="VARCHAR"/>
    <result column="keywords" property="keywords" jdbcType="VARCHAR"/>
    <result column="remake" property="remake" jdbcType="VARCHAR"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    <result column="content_plain" property="contentPlain" jdbcType="LONGVARCHAR"/>
  </resultMap>

  <resultMap id="rm" type="com.ralap.blog.persistent.beans.BizArticle">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="title" property="title" jdbcType="VARCHAR"/>
    <result column="user_id" property="userId" jdbcType="BIGINT"/>
    <result column="cover_url" property="coverUrl" jdbcType="VARCHAR"/>
    <result column="qrcode_url" property="qrcodeUrl" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="BIT"/>
    <result column="type_id" property="typeId" jdbcType="INTEGER"/>
    <result column="top" property="top" jdbcType="BIT"/>
    <result column="recommend" property="recommend" jdbcType="BIT"/>
    <result column="original" property="original" jdbcType="BIT"/>
    <result column="description" property="description" jdbcType="VARCHAR"/>
    <result column="keywords" property="keywords" jdbcType="VARCHAR"/>
    <result column="remake" property="remake" jdbcType="VARCHAR"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    <result column="content_plain" property="contentPlain" jdbcType="LONGVARCHAR"/>

    <result column="look_count" property="lookCount" jdbcType="INTEGER"/>
    <result column="love_count" property="loveCount" jdbcType="INTEGER"/>
    <association property="bizType" javaType="com.ralap.blog.persistent.beans.BizType">
      <id column="btype_id" property="id" jdbcType="BIGINT"/>
      <result column="type_name" property="name" jdbcType="VARCHAR"/>
      <result column="type_description" property="description" jdbcType="VARCHAR"/>
    </association>
    <collection property="tags" column="tag_id" javaType="ArrayList"
      ofType="com.ralap.blog.persistent.beans.BizTags">
      <result column="tag_id" property="id" jdbcType="BIGINT"/>
      <result column="tag_name" property="name" jdbcType="VARCHAR"/>
      <result column="tag_description" property="description" jdbcType="VARCHAR"/>
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    id, title, user_id, cover_url, qrcode_url, status, type_id, top, recommend, original, content_plain, content,
    description, keywords, remake, create_time, update_time
  </sql>

  <select id="findPageBreakByCondition"
    parameterType="com.ralap.blog.bussiness.vo.ArticleConditionVO" resultMap="rm">
    SELECT
    a.*,
    b.id AS btype_id,
    b.name AS type_name,
    b.description AS type_description,
    IFNULL(l.look_count, 0) AS look_count,
    IFNULL(v.love_count, 0) AS love_count
    FROM biz_article a
    INNER JOIN biz_type b ON a.type_id = b.id
    LEFT JOIN (
    SELECT
    IFNULL(COUNT(1), 0) AS look_count,
    article_id
    FROM `biz_article_look`
    GROUP BY article_id
    ) l ON a.id = l.article_id
    LEFT JOIN (
    SELECT
    IFNULL(COUNT(1), 0) AS love_count,
    article_id
    FROM `biz_article_love`
    GROUP BY article_id
    ) v ON a.id = v.article_id
    <where>
      <if test="typeId != null">
        AND type_id = #{typeId}
      </if>
      <if test="searchText != null and searchText != ''">
        AND title LIKE CONCAT('%',#{searchText},'%')
      </if>
      <if test="status != null">
        AND status = #{status}
      </if>
    </where>
    <choose>
      <when test="random != null">
        ORDER BY rand();
      </when>
      <otherwise>
        order by top desc
      </otherwise>
    </choose>
  </select>

  <select id="isExist" parameterType="Long" resultType="Integer">
    SELECT count(id)
    FROM biz_article
    WHERE id = #{articleId}
  </select>

  <select id="selectById" parameterType="Long" resultMap="rm">
    SELECT
      a.*,
      b.id                    AS btype_id,
      b.name                  AS type_name,
      b.description           AS type_description,
      tag.id                  AS tag_id,
      tag.name                AS tag_name,
      tag.description         AS tag_description,
      IFNULL(l.look_count, 0) AS look_count,
      IFNULL(v.love_count, 0) AS love_count
    FROM biz_article a
      INNER JOIN biz_type b ON a.type_id = b.id
      INNER JOIN biz_article_tags atag ON a.id = atag.article_id
      INNER JOIN biz_tags tag ON atag.tags_id = tag.id
      LEFT JOIN (
                  SELECT
                    IFNULL(COUNT(1), 0) AS look_count,
                    article_id
                  FROM `biz_article_look`
                  GROUP BY article_id
                ) l ON a.id = l.article_id
      LEFT JOIN (
                  SELECT
                    IFNULL(COUNT(1), 0) AS love_count,
                    article_id
                  FROM `biz_article_love`
                  GROUP BY article_id
                ) v ON a.id = v.article_id
    WHERE a.id = #{id}
  </select>

  <select id="selectAllIncludeTags" resultMap="rm">
    SELECT
    a.*,
    b.id                    AS btype_id,
    b.name                  AS type_name,
    b.description           AS type_description,
    tag.id                  AS tag_id,
    tag.name                AS tag_name,
    tag.description         AS tag_description
    FROM biz_article a
    INNER JOIN biz_type b ON a.type_id = b.id
    INNER JOIN biz_article_tags atag ON a.id = atag.article_id
    INNER JOIN biz_tags tag ON atag.tags_id = tag.id
  </select>

  <select id="selectPrevAndNextArticle" parameterType="Date"
    resultType="com.ralap.blog.persistent.beans.BizArticle">
    (
      SELECT *
      FROM
        biz_article a
      WHERE
        a.create_time &lt; #{insertTime} AND a.status = 1
      ORDER BY
        a.create_time DESC
      LIMIT 1
    )
    UNION ALL
    (
      SELECT *
      FROM
        biz_article a
      WHERE
        a.create_time &gt; #{insertTime} AND a.status = 1
      ORDER BY
        a.create_time
      LIMIT 1
    )
  </select>

  <select id="hotArticle" resultMap="rm">
    SELECT
      a.*,
      lo.lookCount AS look_count
    FROM
      biz_article a
      LEFT JOIN (
                  SELECT
                    l.article_id,
                    IFNULL(COUNT(1), 0) AS lookCount
                  FROM
                    biz_article_look l
                  GROUP BY
                    l.article_id) lo
        ON a.id = lo.article_id
    WHERE
      a.status = 1
    ORDER BY
      lo.lookCount DESC
  </select>
</mapper>